<?xml version="1.0" encoding="UTF-8"?>
<project name="soapui.targets">
  <taskdef name="saxon-xslt" classname="net.sf.saxon.ant.AntTransform" classpath="${codeline.directory.path}/ThirdParty/AntExtraLibs/saxon9he.jar;${codeline.directory.path}/ThirdParty/AntExtraLibs/saxon9-ant.jar"/>

  <import file="soapui.properties.xml"/>
  <import file="soapui.macros.xml"/>

  <target name="soapui.help">
    <echo taskname="help">
      soapui.run - executes all soapui project files found in the project if it has the property soapui.hasTests or soapui.hasLoadTests set to true.
      A soapui project file has the format of *-soapui-project.xml.
    </echo>
  </target>

  <target name="soapui.clean">
    <delete dir="${soapui.report.dir}" failonerror="true" />
  </target>

  <target name="-soapui.run">
    <if>
      <istrue value="${soapui.hasTests}" />
      <then>
        <call target="-soapui.find.and.run.tests"/>
        <call target="-soapui.generate.report"/>
      </then>
      <elseif>
        <istrue value="${soapui.hasLoadTests}" />
        <then>
          <call target="-soapui.find.and.run.loadtests"/>
          <call target="-soapui.generate.loadtest.report"/>
        </then>
      </elseif>
      <else>
        <echo message="The project ${project.name} is not marked as having soapUI tests: property soapui.hasTests=${soapui.hasTests} or soapui.hasLoadTests=${soapui.hasLoadTests}." />
      </else>
    </if>
  </target>

  <target name="-soapui.find.and.run.tests">
    <delete dir="${soapui.report.dir}" />
    <mkdir dir="${soapui.report.dir}"/>

    <property name="soapui.project.count" value="0" />
    <for param="soapui.project.file.path">
      <path>
        <dirset dir="${project.dir}">
          <include name="**/${soapui.project.dir.pattern}"/>
        </dirset>
        <fileset dir="${project.dir}">
          <include name="**/${soapui.project.file.pattern}"/>          
        </fileset>
      </path>
      <sequential>
        <math result="soapui.project.count" operand1="${soapui.project.count}" operation="+" operand2="1" datatype="int" />
      </sequential>
    </for>

    <property name="soapui.current.project.count" value="0" />
    <for param="soapui.project.file.path">
      <path>
        <dirset dir="${project.dir}">
          <include name="**/${soapui.project.dir.pattern}"/>
        </dirset>
        <fileset dir="${project.dir}">
          <include name="**/${soapui.project.file.pattern}"/>          
        </fileset>
      </path>
      <sequential>
        <math result="soapui.current.project.count" operand1="${soapui.current.project.count}" operation="+" operand2="1" datatype="int" />
        <var unset="true" name="soapui.project.name" />
        <basename file="@{soapui.project.file.path}" suffix=".xml" property="soapui.project.name"/>
        <echo message="@{soapui.project.file.path}. ${soapui.project.name}"/>        
        <script language="javascript">
          <![CDATA[
            projectName = project.getProperty("soapui.project.name");
            projectName = projectName.replace("-soapui-project", "");
            project.setProperty("soapui.project.name", projectName);
        ]]>
        </script>

        <echo message=" ******************** Start @{soapui.project.file.path} project ${soapui.current.project.count} of ${soapui.project.count} *************************" level="info"/>
        <echo message=" ******************** Start @{soapui.project.file.path} project ${soapui.current.project.count} of ${soapui.project.count} *************************" file="${progress-filepath}" level="info"/>

        <exec dir="${soapui.install.bin.directory.path}" osfamily="windows" executable="cmd.exe">
          <arg line='/c testrunner.bat -j -a -f"${soapui.report.dir}/${soapui.project.name}" "@{soapui.project.file.path}" -Dproject.name="${project.name}"'/>
        </exec>

        <exec dir="${soapui.install.bin.directory.path}" osfamily="unix" executable="bash">          
          <arg line='testrunner.sh -j -a -f"${soapui.report.dir}/${soapui.project.name}" "@{soapui.project.file.path}" -Dproject.name="${project.name}"'/>
        </exec>

        <if>
          <exists path="${soapui.report.dir}/${soapui.project.name}/report.xml" />
          <then>
            <replace
              file="${soapui.report.dir}/${soapui.project.name}/report.xml"
              value="">
              <replacefilter token="&lt;testsuites&gt;"/>
              <replacefilter token="&lt;/testsuites&gt;"/>
            </replace>
          </then>
        </if>
            	

        <if>
          <scriptcondition language="javascript">
            <![CDATA[
            var currentProjectCount = project.getProperty("soapui.current.project.count");
            self.setValue(currentProjectCount%10==0);
            ]]>
          </scriptcondition>
          <then>
            <runtarget target="deploy.glassfish.stop.server"/>
            <runtarget target="deploy.glassfish.start.server"/>
          </then>
        </if>
        <echo message=" ******************** End @{soapui.project.file.path} project ${soapui.current.project.count} of ${soapui.project.count} *************************" level="info"/>
        <echo message=" ******************** End @{soapui.project.file.path} project ${soapui.current.project.count} of ${soapui.project.count} *************************" file="${progress-filepath}" level="info"/>
      </sequential>
    </for>
  </target>

  <target name="-soapui.find.and.run.loadtests">
    <delete dir="${soapui.report.dir}" />
    <mkdir dir="${soapui.report.dir}"/>
    <for param="soapui.project.file.path">
      <path>
        <fileset dir="${project.dir}">
          <include name="**/${soapui.project.file.pattern}"/>
        </fileset>
      </path>
      <sequential>

        <var unset="true" name="soapui.project.name"/>
        <basename file="@{soapui.project.file.path}" suffix=".xml" property="soapui.project.name"/>
        <var name="soapui.project.file.path" value="@{soapui.project.file.path}"/>
        <script language="javascript">
          <![CDATA[
            projectName = project.getProperty("soapui.project.name");
            project.setProperty("soapui.project.name", projectName.replace("-soapui-project", ""));
            confFilePath = project.getProperty("soapui.project.file.path");
            project.setProperty("soapui.configuration.file.path", confFilePath.replace("-soapui-project", "-soapui-project-conf"));
        ]]>
        </script>

        <echo level="warning" message="${soapui.configuration.file.path} @{soapui.project.file.path}!" />
        <var unset="true" name="custom.configuration.available"/>
        <available file="${soapui.configuration.file.path}" property="custom.configuration.available"/>
        <if>
          <istrue value="${custom.configuration.available}" />
          <then>
            <soapUILoadTestRunnerCustom projectName="${soapui.project.name}" projectReportDir="${soapui.report.dir}/${soapui.project.name}" projectFilePath="@{soapui.project.file.path}" projectConfFilePath="${soapui.configuration.file.path}"/>
          </then>
          <else>
            <soapUILoadTestRunner projectName="${soapui.project.name}" projectReportDir="${soapui.report.dir}/${soapui.project.name}" projectFilePath="@{soapui.project.file.path}"/>
          </else>
        </if>
      </sequential>
    </for>
  </target>

  <target name="-soapui.generate.report">
    <if>
      <isfalse value="${called.from.main.build}" />
      <then>
        <junitreportplus reportfile="${soapui.report.dir}/SoapUITests.xml" testtype="soapui">
          <xmlreports>
            <fileset dir="${soapui.report.dir}">
              <include name="**/report.xml" />
            </fileset>
          </xmlreports>
        </junitreportplus>
      </then>
    </if>
  </target>

  <target name="-soapui.generate.loadtest.report">
    <property name="soapui.statistics.list.file.path" value="${soapui.report.dir}/statistics.list.xml"/>
    <runtarget target="-soapui.create.statistics.list.xml"/>
    <saxon-xslt
     in="${soapui.statistics.list.file.path}" out="${soapui.report.dir}/SoapUILoadTests.xml" 
     style="${root.project.directory.path}/build/soapui/analitics_csv2xml.xslt"
     force="true">
    </saxon-xslt>
    <delete file="${soapui.statistics.list.file.path}"/>
  </target>

  <target name="-soapui.create.statistics.list.xml" depends="-soapui.init.loadtest.statistics.list.xml">
    <for param="file">
      <path>
        <fileset dir="${soapui.report.dir}">
          <include name="**/*-statistics.txt"/>
        </fileset>
      </path>
      <sequential>
        <echo message="@{file}"/>
        <var name="statistics.list.entry.xpath" value="/statistics"/>
        <var name="statistics.list.entry" value="&lt;file&gt;@{file}&lt;/file&gt;"/>
        <runtarget target="-soapui.insert.entry.to.statistics.list"/>
      </sequential>
    </for>
  </target>

  <target name="-soapui.init.loadtest.statistics.list.xml">
    <xmltask dest="${soapui.statistics.list.file.path}" outputter="simple:3" encoding="UTF-8" standalone="YES">
      <insert path="/" xml="&lt;statistics&gt;&lt;/statistics&gt;"/>
    </xmltask>
  </target>

  <target name="-soapui.insert.entry.to.statistics.list">
    <xmltask source="${soapui.statistics.list.file.path}" dest="${soapui.statistics.list.file.path}" outputter="simple:3"  encoding="UTF-8" standalone="YES">
      <insert path="${statistics.list.entry.xpath}" xml="${statistics.list.entry}"/>
    </xmltask>
  </target>
</project>